format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/kamil/Documents/K/k-workspace/k-workspace/aproject/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.0
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
2 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> /Users/kamil/Documents/K/k-workspace/k-workspace/aproject/target/scala-2.12/test-classes/BinaryGapTest.class
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> /Users/kamil/Documents/K/k-workspace/k-workspace/aproject/target/scala-2.12/test-classes/com/example/test/WidgetTest.class
binary dependencies:
6 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> /Users/kamil/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.0.jar
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> /Users/kamil/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> /Users/kamil/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> /Users/kamil/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.0.jar
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> /Users/kamil/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> /Users/kamil/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
2 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> BinaryGap
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> com.example.Widget
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
2 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> BinaryGapTest
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> com.example.test.WidgetTest
used names:
65 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> $org_scalatest_assert_macro_expr
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> $org_scalatest_assert_macro_left
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> $org_scalatest_assert_macro_right
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> <byname>
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> <init>
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> <repeated>
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> ===
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> A
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Any
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Assertion
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> AssertionsHelper
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> BinaryGap
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> BinaryGapTest
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Bool
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Boolean
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Equality
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Equalizer
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> FunSuite
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Int
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> JUnitRunner
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Nothing
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Position
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Predef
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Prettifier
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> String
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> T
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Tag
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> Unit
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> assert
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> assertionsHelper
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> bg
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> binaryMacroBool
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> convertToEqualizer
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> default
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> here
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> junit
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> macroAssert
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> of
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> org
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> package
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> scalactic
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> scalatest
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> source
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> test
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> <byname>
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> <init>
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> <repeated>
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> Any
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> FunSuite
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> Int
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> Position
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> Predef
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> String
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> Tag
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> Unit
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> Widget
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> WidgetTest
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> com
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> example
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> here
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> org
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> scalactic
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> scalatest
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> source
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> test
product stamps:
2 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/target/scala-2.12/test-classes/BinaryGapTest.class -> lastModified(1480000812000)
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/target/scala-2.12/test-classes/com/example/test/WidgetTest.class -> lastModified(1480000812000)
source stamps:
2 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> hash(b2ba810aeeebe537d4a52d09e5b86c35fee0b725)
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> hash(ad21343fa521ad8ede0626e92bce198a8c5be86a)
binary stamps:
3 items
/Users/kamil/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.0.jar -> lastModified(1477696052000)
/Users/kamil/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar -> lastModified(1478056143000)
/Users/kamil/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar -> lastModified(1478056290000)
class names:
3 items
/Users/kamil/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.0.jar -> scala.Int
/Users/kamil/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.0.jar -> org.scalactic.source.Position
/Users/kamil/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.0.jar -> org.scalatest.FunSuite
internal apis:
2 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwAJYWaAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAJzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHAf49yqdAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgALMCrXkXQAEmNvbnZlcnRUb0VxdWFsaXplcnVxAH4ACQAAAGNzcQB+AAuQoij1dAAGYXNzZXJ0c3EAfgALdBBlrnQAB3N1Y2NlZWRzcQB+AAsS3VyzdAAGbm90aWZ5c3EAfgAL1iKytHQAJmxvd1ByaW9yaXR5Q29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgALLGo9KnQAEEFzc2VydGlvbnNIZWxwZXJzcQB+AAu5PUUxdAAGY2FuY2Vsc3EAfgALp4/x+XQABHRlc3RzcQB+AAvgU0NldAARZXhlY3V0ZSRkZWZhdWx0JDJzcQB+AAvPlshZdAAJaW50ZXJjZXB0c3EAfgALlTLm5nQABGZhaWxzcQB+AAuxWJV9dAAEbmFtZXNxAH4AC22UtSd0ABRhc3NlcnREb2VzTm90Q29tcGlsZXNxAH4ACxPne/l0ABFleGVjdXRlJGRlZmF1bHQkNHNxAH4AC6gY5MF0AAdleGVjdXRlc3EAfgALdZD2LHQABHdhaXRzcQB+AAt+G+K6dAALdGVzdERhdGFGb3JzcQB+AAsvScJydAATY3JlYXRlQ2F0Y2hSZXBvcnRlcnNxAH4AC8sxD/N0AAlzdHlsZU5hbWVzcQB+AAs5YZ2xdAANJGFzSW5zdGFuY2VPZnNxAH4AC1UAq1x0ABFleGVjdXRlJGRlZmF1bHQkM3NxAH4ACyWqckZ0AAljb25maWdNYXBzcQB+AAtH6JvjdAAGZXF1YWxzc3EAfgALYR01mHQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQVRvQkNvbnZlcnNpb25Db25zdHJhaW50c3EAfgALeaPKrHQAD2RlZmF1bHRFcXVhbGl0eXNxAH4AC1zH8JF0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0FUb0JDb25zdHJhaW50c3EAfgALZDYsz3QABHRhZ3NzcQB+AAvrDV6KdAAMYXNJbnN0YW5jZU9mc3EAfgALGKbeDnQABWFsZXJ0c3EAfgAL25da13QAA3J1bnNxAH4AC6dkAxF0AAZzY29wZXNzcQB+AAurTbsHdAADcG9zc3EAfgALciYEXnQADHN5bmNocm9uaXplZHNxAH4AC1g+ivN0AA5hc3NlcnRDb21waWxlc3NxAH4AC/rTSo50AAxhc3NlcnRUaHJvd3NzcQB+AAvZQavMdAANJGlzSW5zdGFuY2VPZnNxAH4AC3dox6t0AAR0cmFwc3EAfgALR8E9onQAFXRlc3REYXRhRm9yJGRlZmF1bHQkMnNxAH4AC10YXgF0AAxhc3NlcnRSZXN1bHRzcQB+AAumaydGdAAEdGV4dHNxAH4ACy6ofzt0ACxjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb252ZXJzaW9uQ29uc3RyYWludHNxAH4ACxetfEh0ABFleGVjdXRlJGRlZmF1bHQkN3NxAH4ACxkZVUh0ABV0eXBlQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAuoIgRNdAADIT09c3EAfgAL31bYlHQABGluZm9zcQB+AAtd6iCndAAJbm90aWZ5QWxsc3EAfgALBML08HQAC3dpdGhGaXh0dXJlc3EAfgALDnFKQXQAB3J1blRlc3RzcQB+AAujKdvAdAAMaXNJbnN0YW5jZU9mc3EAfgALRcUlLHQACHdpdGhDbHVlc3EAfgAL1dxM3nQAEGFzc2VydGlvbnNIZWxwZXJzcQB+AAtJxv+IdAARZXhlY3V0ZSRkZWZhdWx0JDZzcQB+AAs6jn65dAAPYXNzZXJ0VHlwZUVycm9yc3EAfgALrxK2oXQABm1hcmt1cHNxAH4AC3ycr7x0AAhsZWZ0U2lkZXNxAH4AC6LYIXt0AAY8aW5pdD5zcQB+AAtb6ZAZdAALbWFjcm9Bc3N1bWVzcQB+AAtAJ2AidAAPcnVuTmVzdGVkU3VpdGVzc3EAfgALSaIOSnQABWFwcGx5c3EAfgALyk1jb3QACUVxdWFsaXplcnNxAH4AC7OZ8x50ABtuZXdBc3NlcnRpb25GYWlsZWRFeGNlcHRpb25zcQB+AAu9sZWndAAEbm90ZXNxAH4ACzyYOJh0AAI9PXNxAH4AC/srOlt0AAVjbG9uZXNxAH4AC9r6ZpJ0AAxuZXN0ZWRTdWl0ZXNzcQB+AAsOd3w9dAAGYXNzdW1lc3EAfgALBdT9zHQABiRpbml0JHNxAH4AC7+bPdt0ACBsb3dQcmlvcml0eVR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4AC4f2JPZ0AAxyZWdpc3RlclRlc3RzcQB+AAuffLQtdAARZXhlY3V0ZSRkZWZhdWx0JDVzcQB+AAswn1HvdAADPT09c3EAfgALj7cViHQAGG5ld1Rlc3RDYW5jZWxlZEV4Y2VwdGlvbnNxAH4ACwPRX5p0AAh0b1N0cmluZ3NxAH4AC2tcHGx0AAl0ZXN0TmFtZXNzcQB+AAvW1OXPdAAPeWVPbGRlVGVzdE5hbWVzc3EAfgALhuK4X3QAEWV4ZWN1dGUkZGVmYXVsdCQxc3EAfgALhE+qyXQAAiE9c3EAfgALkS/swHQACGdldENsYXNzc3EAfgAL4lrT3XQAE3JlZ2lzdGVySWdub3JlZFRlc3RzcQB+AAv5dk12dAAIdGVzdHNGb3JzcQB+AAtUBSMGdAAIcnVuVGVzdHNzcQB+AAsPEyI8dAARcGVuZGluZ1VudGlsRml4ZWRzcQB+AAvNURHYdAARZXhwZWN0ZWRUZXN0Q291bnRzcQB+AAs6jwvRdAAIcmVydW5uZXJzcQB+AAvodMs+dAAiY29udmVydEVxdWl2YWxlbmNlVG9CVG9BQ29uc3RyYWludHNxAH4AC2EQqhR0AAJuZXNxAH4AC8O0NQF0ABFDaGVja2luZ0VxdWFsaXplcnNxAH4AC/nDiPt0AAdwZW5kaW5nc3EAfgALkg3WJHQADUJpbmFyeUdhcFRlc3RzcQB+AAuYZqTsdAAGaWdub3Jlc3EAfgALXi3Bp3QAC21hY3JvQXNzZXJ0c3EAfgAL23OCMnQAAmVxc3EAfgALsNTJ83QAGmNvbnZlcnRUb0NoZWNraW5nRXF1YWxpemVyc3EAfgALRGpRN3QACU5vQXJnVGVzdHNxAH4ACwxqRlh0AAIjI3NxAH4AC+c0qsR0AAhmaW5hbGl6ZXNxAH4AC26oSLJ0ABtjb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAtsmF9FdAAIaGFzaENvZGVzcQB+AAtgk7LBdAAHc3VpdGVJZHNxAH4AC/Gqssl0AAlzdWl0ZU5hbWVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgDheHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+AMF1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAJ0ABBzY2FsYS5kZXByZWNhdGVkdAAnc2NhbGEucmVmbGVjdC5tYWNyb3MuaW50ZXJuYWwubWFjcm9JbXBsc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+APpzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4A4UwACWluaGVyaXRlZHEAfgDhTAAHcGFyZW50c3EAfgDheHEAfgD/c3EAfgD6dXEAfgDcAAAAAHNxAH4A+nVxAH4A3AAAAABzcQB+APp1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAEHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADEwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AP50AAhGdW5TdWl0ZXNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4A/nNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AAx4cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAADb3Jnc3EAfgEXdAAJc2NhbGF0ZXN0c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ARhzcQB+AQt0AAxGdW5TdWl0ZUxpa2VxAH4BEXNxAH4BC3QAC0RvY3VtZW50aW5ncQB+ARFzcQB+AQt0AAhBbGVydGluZ3EAfgERc3EAfgELdAAJTm90aWZ5aW5ncQB+ARFzcQB+AQt0AAlJbmZvcm1pbmdxAH4BEXNxAH4BC3QAEFRlc3RSZWdpc3RyYXRpb25xAH4BEXNxAH4BC3QACVRlc3RTdWl0ZXEAfgERc3EAfgELdAAFU3VpdGVxAH4BEXNxAH4BC3QADFNlcmlhbGl6YWJsZXNxAH4BD3NxAH4BEnVxAH4BFQAAAAJzcQB+ARd0AAVzY2FsYXEAfgEec3EAfgELcQB+ATBzcQB+AQ9zcQB+ARJ1cQB+ARUAAAADc3EAfgEXdAAEamF2YXNxAH4BF3QAAmlvcQB+AR5zcQB+AQt0AApBc3NlcnRpb25zcQB+ARFzcQB+AQt0AAxUcmlwbGVFcXVhbHNzcQB+AQ9zcQB+ARJ1cQB+ARUAAAADc3EAfgEXdAADb3Jnc3EAfgEXdAAJc2NhbGFjdGljcQB+AR5zcQB+AQt0ABNUcmlwbGVFcXVhbHNTdXBwb3J0cQB+AUJzcQB+AQt0AAZPYmplY3RzcQB+AQ9zcQB+ARJ1cQB+ARUAAAADc3EAfgEXcQB+ATtzcQB+ARd0AARsYW5ncQB+AR5zcQB+AQt0AANBbnlxAH4BMXVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFYluwttHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0AFgvVXNlcnMva2FtaWwvRG9jdW1lbnRzL0svay13b3Jrc3BhY2Uvay13b3Jrc3BhY2UvYXByb2plY3QvdGFyZ2V0L3NjYWxhLTIuMTIvdGVzdC1jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUsrqBCu7r5TfUpS0J5bhsNf7gtyU=
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwQZG8DQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAJzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHBqEKcCdAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgALPayM+nQAEmNvbnZlcnRUb0VxdWFsaXplcnVxAH4ACQAAAGNzcQB+AAtCN3KrdAAGYXNzZXJ0c3EAfgALRr9eInQAB3N1Y2NlZWRzcQB+AAs83MlmdAAGbm90aWZ5c3EAfgAL7VnpenQAJmxvd1ByaW9yaXR5Q29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgALjKx8jnQAEEFzc2VydGlvbnNIZWxwZXJzcQB+AAuiTGGmdAAGY2FuY2Vsc3EAfgALQhGhgHQABHRlc3RzcQB+AAtZQqO3dAARZXhlY3V0ZSRkZWZhdWx0JDJzcQB+AAvc1e/VdAAJaW50ZXJjZXB0c3EAfgAL8Fphu3QABGZhaWxzcQB+AAtrkp5mdAAEbmFtZXNxAH4AC8HZjr10AApXaWRnZXRUZXN0c3EAfgAL+1s8jHQAFGFzc2VydERvZXNOb3RDb21waWxlc3EAfgALuQINWnQAEWV4ZWN1dGUkZGVmYXVsdCQ0c3EAfgALBkNBb3QAB2V4ZWN1dGVzcQB+AAulvjRAdAAEd2FpdHNxAH4ACz63wIh0AAt0ZXN0RGF0YUZvcnNxAH4AC+HoQv10ABNjcmVhdGVDYXRjaFJlcG9ydGVyc3EAfgALu9fZoHQACXN0eWxlTmFtZXNxAH4AC4OT3y10AA0kYXNJbnN0YW5jZU9mc3EAfgALOWn683QAEWV4ZWN1dGUkZGVmYXVsdCQzc3EAfgALAjdHDXQACWNvbmZpZ01hcHNxAH4AC+4HR350AAZlcXVhbHNzcQB+AAvNu9ZmdAAsY29udmVydEVxdWl2YWxlbmNlVG9BVG9CQ29udmVyc2lvbkNvbnN0cmFpbnRzcQB+AAtZn2KcdAAPZGVmYXVsdEVxdWFsaXR5c3EAfgALBAgaKHQAImNvbnZlcnRFcXVpdmFsZW5jZVRvQVRvQkNvbnN0cmFpbnRzcQB+AAtY/XwxdAAEdGFnc3NxAH4AC4ZDVj10AAxhc0luc3RhbmNlT2ZzcQB+AAuSV/XMdAAFYWxlcnRzcQB+AAvuOKrwdAADcnVuc3EAfgALmYffbHQABnNjb3Blc3NxAH4AC0Js0JZ0AANwb3NzcQB+AAv/vTwCdAAMc3luY2hyb25pemVkc3EAfgAL+1Of7nQADmFzc2VydENvbXBpbGVzc3EAfgALdsVA1XQADGFzc2VydFRocm93c3NxAH4ACycCAP50AA0kaXNJbnN0YW5jZU9mc3EAfgALu3/01XQABHRyYXBzcQB+AAuCQXkNdAAVdGVzdERhdGFGb3IkZGVmYXVsdCQyc3EAfgAL12SYjHQADGFzc2VydFJlc3VsdHNxAH4ACws9IjJ0AAR0ZXh0c3EAfgALKFG2dnQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQlRvQUNvbnZlcnNpb25Db25zdHJhaW50c3EAfgAL7k2IqnQAEWV4ZWN1dGUkZGVmYXVsdCQ3c3EAfgALlvmeDXQAFXR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4ACzzJItl0AAMhPT1zcQB+AAsIIKcedAAEaW5mb3NxAH4ACwBc0HV0AAlub3RpZnlBbGxzcQB+AAvYr/ZAdAALd2l0aEZpeHR1cmVzcQB+AAs2j6IhdAAHcnVuVGVzdHNxAH4AC32YHhp0AAxpc0luc3RhbmNlT2ZzcQB+AAtfQVLXdAAId2l0aENsdWVzcQB+AAuonWn2dAAQYXNzZXJ0aW9uc0hlbHBlcnNxAH4AC/XWvkF0ABFleGVjdXRlJGRlZmF1bHQkNnNxAH4ACxaiypB0AA9hc3NlcnRUeXBlRXJyb3JzcQB+AAv5PJvXdAAGbWFya3Vwc3EAfgALOfmUD3QACGxlZnRTaWRlc3EAfgALn4L2TnQABjxpbml0PnNxAH4AC66Gji10AAttYWNyb0Fzc3VtZXNxAH4AC907Crh0AA9ydW5OZXN0ZWRTdWl0ZXNzcQB+AAu/uIHjdAAFYXBwbHlzcQB+AAtJEfCQdAAJRXF1YWxpemVyc3EAfgALWuk3PnQAG25ld0Fzc2VydGlvbkZhaWxlZEV4Y2VwdGlvbnNxAH4AC5pog8t0AARub3Rlc3EAfgALB56f5XQAAj09c3EAfgALPiv4WnQABWNsb25lc3EAfgALj4jbr3QADG5lc3RlZFN1aXRlc3NxAH4ACy2bJnd0AAZhc3N1bWVzcQB+AAuvC4sXdAAGJGluaXQkc3EAfgALWJWZD3QAIGxvd1ByaW9yaXR5VHlwZUNoZWNrZWRDb25zdHJhaW50c3EAfgALlVVooXQADHJlZ2lzdGVyVGVzdHNxAH4AC4DAt5J0ABFleGVjdXRlJGRlZmF1bHQkNXNxAH4ACzeRKj10AAM9PT1zcQB+AAsNY6KndAAYbmV3VGVzdENhbmNlbGVkRXhjZXB0aW9uc3EAfgALMr3+F3QACHRvU3RyaW5nc3EAfgALxTrQzXQACXRlc3ROYW1lc3NxAH4ACwalQK10AA95ZU9sZGVUZXN0TmFtZXNzcQB+AAuoJ+4UdAARZXhlY3V0ZSRkZWZhdWx0JDFzcQB+AAsyOl91dAACIT1zcQB+AAtNplBqdAAIZ2V0Q2xhc3NzcQB+AAuUbdyddAATcmVnaXN0ZXJJZ25vcmVkVGVzdHNxAH4ACylAAgB0AAh0ZXN0c0ZvcnNxAH4AC31zut10AAhydW5UZXN0c3NxAH4AC2OLKVB0ABFwZW5kaW5nVW50aWxGaXhlZHNxAH4ACzJa73V0ABFleHBlY3RlZFRlc3RDb3VudHNxAH4AC5Ev+JJ0AAhyZXJ1bm5lcnNxAH4AC5xaHc90ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb25zdHJhaW50c3EAfgALMg6jL3QAAm5lc3EAfgALqBRmE3QAEUNoZWNraW5nRXF1YWxpemVyc3EAfgALFSrIUHQAB3BlbmRpbmdzcQB+AAtByExHdAAGaWdub3Jlc3EAfgALiZcNwnQAC21hY3JvQXNzZXJ0c3EAfgALyRTpuXQAAmVxc3EAfgAL2RJyoXQAGmNvbnZlcnRUb0NoZWNraW5nRXF1YWxpemVyc3EAfgAL9l++6HQACU5vQXJnVGVzdHNxAH4AC1FSa850AAIjI3NxAH4AC0mHCxp0AAhmaW5hbGl6ZXNxAH4AC9nYQt90ABtjb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAu3oORVdAAIaGFzaENvZGVzcQB+AAs/QuRMdAAHc3VpdGVJZHNxAH4ACw0q2gx0AAlzdWl0ZU5hbWVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgDheHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAbY29tLmV4YW1wbGUudGVzdC5XaWRnZXRUZXN0dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAACdAAQc2NhbGEuZGVwcmVjYXRlZHQAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgD7c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AOFMAAlpbmhlcml0ZWRxAH4A4UwAB3BhcmVudHNxAH4A4XhxAH4BAHNxAH4A+3VxAH4A3AAAAABzcQB+APt1cQB+ANwAAAAAc3EAfgD7dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAABBzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AAxMAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgD/dAAIRnVuU3VpdGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AP9zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgAMeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAA29yZ3NxAH4BGHQACXNjYWxhdGVzdHNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgEZc3EAfgEMdAAMRnVuU3VpdGVMaWtlcQB+ARJzcQB+AQx0AAtEb2N1bWVudGluZ3EAfgESc3EAfgEMdAAIQWxlcnRpbmdxAH4BEnNxAH4BDHQACU5vdGlmeWluZ3EAfgESc3EAfgEMdAAJSW5mb3JtaW5ncQB+ARJzcQB+AQx0ABBUZXN0UmVnaXN0cmF0aW9ucQB+ARJzcQB+AQx0AAlUZXN0U3VpdGVxAH4BEnNxAH4BDHQABVN1aXRlcQB+ARJzcQB+AQx0AAxTZXJpYWxpemFibGVzcQB+ARBzcQB+ARN1cQB+ARYAAAACc3EAfgEYdAAFc2NhbGFxAH4BH3NxAH4BDHEAfgExc3EAfgEQc3EAfgETdXEAfgEWAAAAA3NxAH4BGHQABGphdmFzcQB+ARh0AAJpb3EAfgEfc3EAfgEMdAAKQXNzZXJ0aW9uc3EAfgESc3EAfgEMdAAMVHJpcGxlRXF1YWxzc3EAfgEQc3EAfgETdXEAfgEWAAAAA3NxAH4BGHQAA29yZ3NxAH4BGHQACXNjYWxhY3RpY3EAfgEfc3EAfgEMdAATVHJpcGxlRXF1YWxzU3VwcG9ydHEAfgFDc3EAfgEMdAAGT2JqZWN0c3EAfgEQc3EAfgETdXEAfgEWAAAAA3NxAH4BGHEAfgE8c3EAfgEYdAAEbGFuZ3EAfgEfc3EAfgEMdAADQW55cQB+ATJ1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAA3NyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgAMeHB0ABBjb20uZXhhbXBsZS50ZXN0c3EAfgFYdAALY29tLmV4YW1wbGVzcQB+AVh0AANjb21zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAViW7C20dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgAMTAAPc291cmNlRGlyZWN0b3J5cQB+AAx4cHQAWC9Vc2Vycy9rYW1pbC9Eb2N1bWVudHMvSy9rLXdvcmtzcGFjZS9rLXdvcmtzcGFjZS9hcHJvamVjdC90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABStITQ/pSGtjt4GJukrzhmKjFvoag==
external apis:
2 items
BinaryGap -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw1T7SfAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw4FjIMHQABm5vdGlmeXNxAH4ADM1yYVd0AAR3YWl0c3EAfgAM/khTdXQADSRhc0luc3RhbmNlT2ZzcQB+AAwRFmqXdAAGZXF1YWxzc3EAfgAMaWjQ63QACUJpbmFyeUdhcHNxAH4ADKJYsE90AAxhc0luc3RhbmNlT2ZzcQB+AAyVtmKkdAAMc3luY2hyb25pemVkc3EAfgAMnOiAGnQADSRpc0luc3RhbmNlT2ZzcQB+AAwdzv0ndAAJbm90aWZ5QWxsc3EAfgAMm+AZZnQADGlzSW5zdGFuY2VPZnNxAH4ADOQ5FTt0AAY8aW5pdD5zcQB+AAyePOVTdAACPT1zcQB+AAyN3Qf5dAAFY2xvbmVzcQB+AAwumA+2dAAIdG9TdHJpbmdzcQB+AAwK2Em3dAACIT1zcQB+AAwjRgcKdAAIZ2V0Q2xhc3NzcQB+AAzQkYArdAACbmVzcQB+AAyikqrrdAACZXFzcQB+AAxyu3w5dAACb2ZzcQB+AAzZsb2odAACIyNzcQB+AAwkrhJhdAAIZmluYWxpemVzcQB+AAxiqyX7dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ABd1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AF9zcQB+AFp1cQB+AD4AAAAAc3EAfgBadXEAfgA+AAAAAHNxAH4AWnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AXnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AXnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ad3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AeHNxAH4Aa3QAA0FueXNxAH4Ab3NxAH4AcnVxAH4AdQAAAAJzcQB+AHd0AAVzY2FsYXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAViW7BKAdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAUy9Vc2Vycy9rYW1pbC9Eb2N1bWVudHMvSy9rLXdvcmtzcGFjZS9rLXdvcmtzcGFjZS9hcHJvamVjdC90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUx+pZvsvz5ZjLhxRFXR2a/MUy9LU=
com.example.Widget -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwOP4sdAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAXc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwPPQsVHQABm5vdGlmeXNxAH4ADC0gp0h0AAR3YWl0c3EAfgAMoK1qgXQADSRhc0luc3RhbmNlT2ZzcQB+AAyNCtF3dAAGZXF1YWxzc3EAfgAMkyI6/3QADGFzSW5zdGFuY2VPZnNxAH4ADHWK6nN0AAtkaXNwb3NpdGlvbnNxAH4ADNn0flV0AAxzeW5jaHJvbml6ZWRzcQB+AAymuyGNdAANJGlzSW5zdGFuY2VPZnNxAH4ADBpEos10AAlub3RpZnlBbGxzcQB+AAzuJWZ2dAAMaXNJbnN0YW5jZU9mc3EAfgAMgRBTY3QABjxpbml0PnNxAH4ADBhh1EZ0AAI9PXNxAH4ADNLAqfR0AAVjbG9uZXNxAH4ADOLs4ct0AAZjb2xvdXJzcQB+AAxcU4RwdAAIdG9TdHJpbmdzcQB+AAyILHEddAACIT1zcQB+AAwq13LIdAAIZ2V0Q2xhc3NzcQB+AAy2WiWVdAACbmVzcQB+AAzhuK7idAAGV2lkZ2V0c3EAfgAMQmOlLXQAAmVxc3EAfgAMNYKQKnQAAiMjc3EAfgAMie08VXQACGZpbmFsaXplc3EAfgAMwno9gHQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ARXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAEmNvbS5leGFtcGxlLldpZGdldHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBdc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEVMAAlpbmhlcml0ZWRxAH4ARUwAB3BhcmVudHNxAH4ARXhxAH4AYnNxAH4AXXVxAH4AQAAAAABzcQB+AF11cQB+AEAAAAAAc3EAfgBddXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBhdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBhc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB6dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB7c3EAfgBudAADQW55c3EAfgByc3EAfgB1dXEAfgB4AAAAAnNxAH4AenQABXNjYWxhcQB+AIF1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAnNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AAtjb20uZXhhbXBsZXNxAH4Ai3QAA2NvbXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWJbsEoB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABTL1VzZXJzL2thbWlsL0RvY3VtZW50cy9LL2std29ya3NwYWNlL2std29ya3NwYWNlL2Fwcm9qZWN0L3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQE1jg4fVXoX8ZiH7u1tUkhGQHMow==
source infos:
2 items
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/BinaryGapTest.scala -> 
AAAAAAAAAAA=
/Users/kamil/Documents/K/k-workspace/k-workspace/aproject/src/test/scala/WidgetTest.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWJbqpyJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAfi9Vc2Vycy9rYW1pbC9Eb2N1bWVudHMvSy9rLXdvcmtzcGFjZS9naWFvZC9Db3Vyc2VyYS9TY2FsYVNwZWNpYWxpemF0aW9uL2thbWlsLXByb2dmdW4xL2Fwcm9qZWN0L3RhcmdldC9zY2FsYS0yLjEyL3Rlc3QtY2xhc3Nlc3QAAS8=
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWJbsLbR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAWC9Vc2Vycy9rYW1pbC9Eb2N1bWVudHMvSy9rLXdvcmtzcGFjZS9rLXdvcmtzcGFjZS9hcHJvamVjdC90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
